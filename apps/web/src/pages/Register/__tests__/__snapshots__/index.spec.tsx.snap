// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register should render correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="register"
      >
        <main
          class="section-main"
        >
          <h1
            class="MuiTypography-root MuiTypography-h1 title css-o2w69a-MuiTypography-root"
          >
            app.name
          </h1>
          <div
            class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded card-register false css-172kgz0-MuiPaper-root"
          >
            <h6
              class="MuiTypography-root MuiTypography-h6 card-title css-2ulfj5-MuiTypography-root"
            >
              register.default
            </h6>
            <div>
              RegisterContainer-
              0
              <button
                data-testid="onHandleFirstSubmit"
              />
              <button
                data-testid="onHandleSecondSubmit"
              />
            </div>
            <button
              class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-fullWidth MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-fullWidth navigation css-10vjzfb-MuiButtonBase-root-MuiButton-root"
              tabindex="0"
              title="register.button"
              type="button"
            >
              register.go
            </button>
          </div>
        </main>
        <section
          class="section-secondary"
        >
          <figure
            class="container-image"
          >
            <img
              alt="register.image"
              class="image-register"
              src="mocked-file-content"
            />
          </figure>
        </section>
      </div>
      <div>
        TransitionAlert
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="register"
    >
      <main
        class="section-main"
      >
        <h1
          class="MuiTypography-root MuiTypography-h1 title css-o2w69a-MuiTypography-root"
        >
          app.name
        </h1>
        <div
          class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded card-register false css-172kgz0-MuiPaper-root"
        >
          <h6
            class="MuiTypography-root MuiTypography-h6 card-title css-2ulfj5-MuiTypography-root"
          >
            register.default
          </h6>
          <div>
            RegisterContainer-
            0
            <button
              data-testid="onHandleFirstSubmit"
            />
            <button
              data-testid="onHandleSecondSubmit"
            />
          </div>
          <button
            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-fullWidth MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-fullWidth navigation css-10vjzfb-MuiButtonBase-root-MuiButton-root"
            tabindex="0"
            title="register.button"
            type="button"
          >
            register.go
          </button>
        </div>
      </main>
      <section
        class="section-secondary"
      >
        <figure
          class="container-image"
        >
          <img
            alt="register.image"
            class="image-register"
            src="mocked-file-content"
          />
        </figure>
      </section>
    </div>
    <div>
      TransitionAlert
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
